from aiogram import Router, F  
from aiogram.types import Message, CallbackQuery  
from aiogram.filters import Command  

from user_manager import UserManager  
from keyboards.profile_keyboard import (  
    get_profile_keyboard,   
    get_extend_subscription_keyboard  
)  

profile_router = Router()  

@profile_router.message(Command("profile"))  
async def show_profile(  
    message: Message,   
    user_manager: UserManager  
):  
    """  
    –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  
    """  
    try:  
        user_details = await user_manager.get_user_details(  
            telegram_id=message.from_user.id  
        )  

        profile_text = (  
            "üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"  
            f"üÜî Telegram ID: {message.from_user.id}\n"  
            f"üìß Username: @{message.from_user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"  
            f"üîë VPN –õ–æ–≥–∏–Ω: `{user_details['marzban_username']}`\n"  
            f"üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user_details['registration_date']}"  
        )  

        await message.answer(  
            profile_text,   
            reply_markup=get_profile_keyboard(),  
            parse_mode='Markdown'  
        )  

    except Exception as e:  
        await message.answer(  
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."  
        )  
        user_manager.logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: {e}")  

@profile_router.callback_query(F.data == "extend_subscription")  
async def extend_subscription(  
    callback: CallbackQuery  
):  
    """  
    –ú–µ–Ω—é –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏  
    """  
    await callback.message.edit_text(  
        "üÜô –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ–¥–ª–µ–Ω–∏—è:",  
        reply_markup=get_extend_subscription_keyboard()  
    )  
    await callback.answer()