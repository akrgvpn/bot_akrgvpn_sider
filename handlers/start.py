from aiogram import Router, F  
from aiogram.types import Message, CallbackQuery  
from aiogram.filters import CommandStart  
from aiogram.fsm.context import FSMContext  

from config import TELEGRAM_ADMIN_IDS  
from user_manager import UserManager  
from keyboards.start_keyboard import (  
    get_start_keyboard,   
    get_admin_start_keyboard,  
    get_referral_keyboard  
)  

start_router = Router()  

@start_router.message(CommandStart())  
async def cmd_start(  
    message: Message,   
    state: FSMContext,   
    user_manager: UserManager  
):  
    """  
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start  
    """  
    try:  
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞  
        referrer_id = None  
        parts = message.text.split()  
        if len(parts) > 1:  
            try:  
                referrer_id = int(parts[1])  
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞  
                if referrer_id in TELEGRAM_ADMIN_IDS:  
                    referrer_id = None  
            except ValueError:  
                referrer_id = None  

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  
        user_data = await user_manager.register_user(  
            telegram_user=message.from_user,  
            referrer_id=referrer_id  
        )  

        # –í—ã–±–æ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã  
        keyboard = (  
            get_admin_start_keyboard()   
            if message.from_user.id in TELEGRAM_ADMIN_IDS   
            else get_start_keyboard()  
        )  

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è  
        await message.answer(  
            f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"  
            f"–¢–≤–æ–π VPN –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:\n"  
            f"üîë –õ–æ–≥–∏–Ω: `{user_data['marzban_username']}`\n\n"  
            f"–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É:\n"  
            f"`{user_data['subscription_link']}`",  
            reply_markup=keyboard,  
            parse_mode='Markdown'  
        )  

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã  
        if referrer_id:  
            await message.answer(  
                "ü§ù –í—ã –±—ã–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!",  
                reply_markup=get_referral_keyboard()  
            )  

    except Exception as e:  
        await message.answer(  
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. "  
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."  
        )  
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏  
        user_manager.logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")